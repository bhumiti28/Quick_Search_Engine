https://www.javatpoint.com/implement-flash-message-with-laravel-5-point-7
Implement Flash Message with Laravel 5.7 - Javatpoint
Implement Flash Message with Laravel 5.7 - Javatpoint ? Home PHP Laravel Magento 2 HTML CSS Java MySQL Bootstrap JavaScript jQuery C XML Quiz Interview Q Comment Forum Training Laravel Tutorial Laravel Tutorial Features of Laravel History of Laravel Installation on Windows XAMPP Installation Composer Installation Git Installation Creating First Laravel Project Laravel Application Structure Laravel Routing Laravel Basic Routing Routing Parameters Laravel Named Routes Laravel Middleware Laravel Route Groups Laravel Controllers Laravel Controllers Routing Controllers Resource Controllers Controller Middleware Laravel Views Laravel Views Passing data to views Laravel Blade Template Blade Template Template Inheritance Laravel Forms Laravel Migration Laravel Migration Migration Structure Generating Migrations Migration Commands Laravel Database Laravel Database Laravel Eloquent Laravel Relationship Laravel Tinker Laravel Crud Misc. Laravel Validation Laravel File Upload Laravel Sessions Laravel vs CodeIgniter Laravel vs Django Laravel vs Symfony Laravel vs WordPress Install and Use Font Awesome Icons in Laravel Delete Multiple Records using Checkbox in Laravel Import and Export CSV file in Laravel 5.8 Generate PDF from html view file and download using dompdf in Laravel Implement Flash Message with Laravel 5.7 Laravel VueJS File Upload Using Vue-dropzone Example Interview Questions Laravel Interview Questions next ? ? prev Implement Flash Message with Laravel 5.7 In this section, we are going to use Laravel 5.7 so that we can use a custom bootstrap alert flash message. In our given example, we are going to use the controller method to redirect with an alert message, and then we will use a blade file to print the flash message. Our bootstrap Laravel 5.7 project will show some messages like an alert warning, alert danger, alert info, alert-success, etc. We can easily perform it without using any composer package. So, in our example, we will not use any package. If we use the laravel 5.7 application, it will require the flash message because the flash message is used to provide an alert with the detail of complete progress, warning, and error, etc. The flash message can be provided in several ways like redirecting with info message, error message, success message, and warning message. In our example, we will make a good layout by using the bootstrap flash alert layout. In the laravel application, we can integrate flash message by using a step by step process, which is as follows: Step 1: In this step, we are going to Create Global Blade File for Flash Message. For this, flash-message.blade.php will be created, which is a new blade file. We will use this file to write bootstrap alert code, and we will check which messages come. For this, we are going to add some alerts, which are described as follows: success error warning info validation error So we will create flash.message.blade.php file. After that, we will use the following code to add into the file: resources/views/flash-message.blade.php: 
@if ($message = Session::get('success'))
<div class="alert alert-success alert-block">
	<button type="button" class="close" data-dismiss="alert">?</button>	
        <strong>{{ $message }}</strong>
</div>
@endif

@if ($message = Session::get('error'))
<div class="alert alert-danger alert-block">
	<button type="button" class="close" data-dismiss="alert">?</button>	
        <strong>{{ $message }}</strong>
</div>
@endif

@if ($message = Session::get('warning'))
<div class="alert alert-warning alert-block">
	<button type="button" class="close" data-dismiss="alert">?</button>	
	<strong>{{ $message }}</strong>
</div>
@endif

@if ($message = Session::get('info'))
<div class="alert alert-info alert-block">
	<button type="button" class="close" data-dismiss="alert">?</button>	
	<strong>{{ $message }}</strong>
</div>
@endif

@if ($errors->any())
<div class="alert alert-danger">
	<button type="button" class="close" data-dismiss="alert">?</button>	
	Please check the form below for errors
</div>
@endif
 Step 2: In the second step, we are going to Include Flash message in Theme. For this, we will use our theme default file and then include flash-message.blade.php file into it, which is shown in the following code: resources/views/layouts/app.blade.php 
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- Styles -->
    <link href="/css/app.c11q	ss" rel="stylesheet">
</head>
<body>

    <div id="app">
        @include('flash-message')

        @yield('content')
    </div>

    <!-- Scripts -->
    <script src="/js/app.js"></script>
</body>
</html>
 Step 3: In the third step, we will Use flash message with Redirect. Here we will redirect one by one and provide a message on every redirect. The messages of redirection can be divided into various types. 1. Redirect with success message If our project in Laravel needs to redirect url, redirect route, or redirect back, we can easily do that with the help of a success flash message. In order to do this successfully, we have to use a controller, which is described as follows: 
public function create(Request $request)
{
	$this->validate($request,[
        'title' => 'required',
        'details' => 'required'
        ]);

	$items = Item::create($request->all());

	return back()->with('success','Item created successfully!');
}
 Our above code is ready to run. When we run this code, we will get the below output of the success flash message like this: 2. Redirect with error message If our project in laravel needs to redirect url, redirect route, or redirect back, we can easily do that with the help of an error flash message. In order to do this successfully, we have to use a controller, which is described as follows: 
public function create(Request $request)
{
    return redirect()->route('home')
        ->with('error','Woops, Something is wrong!');
}
 Our above code is ready to run. When we run this code, we will get the below output of the error flash message like this: 3. Redirect with warning message If our project in Laravel needs to redirect url, redirect route, or redirect back, we can easily do that with the help of a warning flash message. In order to do this successfully, we have to use a controller, which is described as follows: 
public function create(Request $request)
{
    return redirect()->route('home')
            ->with('warning','Please don't Open this link);
}
 Our above code is ready to run. When we run this code, we are going to get the below output of the warning flash message like this: 4. Redirect with info message If our project in Laravel needs to redirect url, redirect route, or redirect back, we can easily do that with the help of an info flash message. In order to do this successfully, we have to use a controller, which is described as follows: 
public function create(Request $request)
{
    $this->validate($request,[
        'title' => 'required',
        'details' => 'required'
        ]);

    $items = Item::create($request->all());

    return back()->with('info','Item created successfully, Follow another step!');
}
 Our above code is ready to run. When we run this code, we will get the below output of the info flash message like this: 5. Validation error We will automatically redirect back to error if we want to use validation in laravel 5. After this, an error flash message will also be generated. 
public function create(Request $request)
{
    $this->validate($request,[
        'title' => 'required',
        'details' => 'required'
        ]);

    .....
}
 Our above code is ready to run. When we run this code, we will get the below output of the error flash message like this: By using the above way in our laravel 5 application, we can easily implement flash messages. Next TopicLaravel VueJS File Upload Using Vue-dropzone Example ? prev next ? For Videos Join Our Youtube Channel: Join Now Help Others, Please Share Learn Latest Tutorials SoapUI RPA Manual T. Cucumber Appium PostgreSQL Solr MongoDB Gimp Verilog Teradata PhoneGap Preparation Aptitude Reasoning Verbal A. Interview Company Trending Technologies AI AWS Selenium Cloud Hadoop ReactJS D. Science Angular 7 Blockchain Git ML DevOps B.Tech / MCA DBMS DS DAA OS C. Network Compiler D. COA D. Math. E. Hacking C. Graphics Software E. Web Tech. Cyber Sec. Automata C C++ Java .Net Python Programs Control S. Data Mining Javatpoint Services JavaTpoint offers too many high quality services. Mail us on hr@javatpoint.com, to get more information about given services. Website Designing Website Development Java Development PHP Development WordPress Graphic Designing Logo Digital Marketing On Page and Off Page SEO PPC Content Development Corporate Training Classroom and Online Training Data Entry Training For College Campus JavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at hr@javatpoint.com. Duration: 1 week to 2 week Like/Subscribe us for latest updates or newsletter Learn TutorialsLearn JavaLearn Data StructuresLearn C ProgrammingLearn C++ TutorialLearn C# TutorialLearn PHP TutorialLearn HTML TutorialLearn JavaScript TutorialLearn jQuery TutorialLearn Spring Tutorial Our WebsitesJavatpoint.comHindi100.comLyricsia.comQuoteperson.comJobandplacement.com Our Services Website Development Android Development Website Designing Digital Marketing Summer Training Industrial Training College Campus Training Contact Address: G-13, 2nd Floor, Sec-3 Noida, UP, 201301, India Contact No: 0120-4256464, 9990449935Contact Us Subscribe Us Privacy PolicySitemap About Me © Copyright 2011-2018 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.
