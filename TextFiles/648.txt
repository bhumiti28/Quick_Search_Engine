https://www.javatpoint.com/generating-qr-code-in-java
Generating QR Code in Java - Javatpoint
Generating QR Code in Java - Javatpoint ? Home Java Programs OOPs String Regex Exception Multithreading Collections JDBC Swing JavaFX Servlet JSP Spring Spring Boot Projects Interview Questions Java Training Java Tutorial What is Java History of Java Features of Java C++ vs Java Hello Java Program Program Internal How to set path? JDK, JRE and JVM JVM: Java Virtual Machine Java Variables Java Data Types Unicode System Operators Keywords Control Statements Java If-else Java Switch Java For Loop Java While Loop Java Do While Loop Java Break Java Continue Java Comments Java Programs Java Object Class Java OOPs Concepts Naming Convention Object and Class Method Constructor static keyword this keyword Java Inheritance Inheritance(IS-A) Aggregation(HAS-A) Java Polymorphism Method Overloading Method Overriding Covariant Return Type super keyword Instance Initializer block final keyword Runtime Polymorphism Dynamic Binding instanceof operator Java Abstraction Abstract class Interface Abstract vs Interface Java Encapsulation Package Access Modifiers Encapsulation Java Array Java Array Java OOPs Misc Object class Object Cloning Math class Wrapper Class Java Recursion Call By Value strictfp keyword javadoc tool Command Line Arg Object vs Class Overloading vs Overriding Java String Java Regex Exception Handling Java Inner classes Java Multithreading Java I/O Java Networking Java AWT & Events Java Swing JavaFX Java Applet Java Reflection Java Date Java Conversion Java Collection Java JDBC Java Misc Java New Features RMI Internationalization Interview Questions Java MCQ next ? ? prev Generating QR Code in Java The QR code is shortened for Quick Response code. It is an alternative to bar code or we can say that it is a two-dimensional bar-code. It contains the matrix of small squares in which information is stored. It works the same as a bar-code. It can be read by an imaging device. Nowadays, it's being used a lot in every field such as GEO location, on products, vehicle tracking, etc. In this section, we will learn how to generate and read QR code in Java by using the ZXing library. QR Code The grid arrangement of the black squares on a white background that can be read by an imaging device is called a QR code. The advantage of a QR code is that it can be scanned by smartphones. We need not to carry any handheld device for scanning. It is used to store information such as text, webpage, URL, etc. It uses the following four standardized encoding modes: Numeric Alphanumeric Byte/binary Kanji (the Japanese script) These standard encodings modes store data effectively. The Quick Response system became popular outside the automotive industry due to its fast readability and greater storage capacity compared to standard UPC barcodes. How does QR code work? QR code is made up of modules (black and white squares) that contain the encoded data. Modules are arranged in the row and columns that are called Data Matrix. The Placing of data bits starts from the bottom right corner and moves in an upward direction and changes the position while reach at the top. We scan the QR code through an imaging device such as a camera. After scanning, it processes the QR code using the Reed-Solomon Error Correction Code until the image interpreted. After that, the data is extracted from the patterns that are stored in horizontal and vertical components of the code. The following figure describes the structure of the QR code and its elements. QR Code Components There are the two primary components of QR code i.e. Function Patterns and Encoding Regions. These components further divided into small components. The following figure depicts the components of QR code. The following table describes each component with their work. Components Parts of Components Description Quite Zone It is the boundary of the QR code. The white space around the QR code represents the quiet zone. Function Patterns Positioning Patterns It is also known as finder patterns or position markers. It finds the edges of the QR code. Timing Patterns It helps the scanner to identify the position of rows and columns. The sixth row and column in the QR code are dedicated to the timing pattern. Separator It separates data from the finder pattern. Alignment Patterns It helps the scanner to identify the reference point for alignment. Encoding Regions Format Information It helps the scanner to identify the types of content such as text, URL, etc. It contains data in two parts i.e. Level of Error Correction and masks pattern. Version Information It helps the scanner to identify the version number of the QR code. Data Modules It helps the scanner to decode the data entered by the creator. Error Correction Levels A QR code can be scanned even if it is damaged somewhat (up to 30%). The Reed-Solomon Correction algorithm makes it possible. It is to be noted that if we add error correction, it increases the number of the data block in the QR code. So, we need to adjust the level of error correction according to requirements. There are four levels of error correction: The following QR code represents the 7% error correction. Error Correction Levels and their Capability Level Correction in % Low (L) 7% Medium (M) 15% Quartile (Q) 25% High (H) 30% How much data can be stored in the QR code? The data storage capacity of a QR code depends on the following three: Datatype (mode or input character set) Version (1 to 40 different sizes of QR) Error correction The version denotes the dimensions of the symbol (i.e. 4 × version number + 17 dots on each side). Maximum Character Storage Capacity Encoding mode Max. characters Bits/char Possible characters and default encoding Numeric only 7,089 31?3 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 Alphanumeric 4,296 51?2 0-9, A-Z (upper-case only), space, $, %, *, +, -, ., /, : Binary/byte 2,953 8 ISO 8859-1 Kanji/kana 1,817 13 Shift JIS X 0208 Note: As the version number varies, the number of rows and columns also varies. Therefore, stores the higher information. Also, notable that the QR code contains an equal number of rows and columns. The number of rows and columns depends on the version number. Generating QR Code To generate a QR code in Java, we need to use a third-party library named ZXing (Zebra Crossing). It is a popular API that allows us to process with QR code. With the help of the library, we can easily generate and read the QR code. Before moving towards the Java program, we need to add the ZXing library to the project. We can download it from the official site. zxing core-3.3.0.jar zxing javase-3.3.0.jar After downloading, add it to the classpath. Or add the following dependency in pom.xml file. 
<dependencies>
<dependency>
<groupId>com.google.zxing</groupId>
<artifactId>core</artifactId>
<version>3.3.0</version>
</dependency>
<dependency>
<groupId>com.google.zxing</groupId>
<artifactId>javase</artifactId>
<version>3.3.0</version>
</dependency>
</dependencies> 
 Let's create a Java program that generates a QR code. GenerateQrCode.java 
import java.io.File;
import java.io.IOException;
import java.util.HashMap;
import java.util.Map;
import com.google.zxing.BarcodeFormat;
import com.google.zxing.EncodeHintType;
import com.google.zxing.MultiFormatWriter;
import com.google.zxing.NotFoundException;
import com.google.zxing.WriterException;
import com.google.zxing.client.j2se.MatrixToImageWriter;
import com.google.zxing.common.BitMatrix;
import com.google.zxing.qrcode.decoder.ErrorCorrectionLevel;
public class GenerateQRCode
{
//static function that creates QR Code
public static void generateQRcode(String data, String path, String charset, Map map, int h, int w) throws WriterException, IOException
{
//the BitMatrix class represents the 2D matrix of bits
//MultiFormatWriter is a factory class that finds the appropriate Writer subclass for the BarcodeFormat requested and encodes the barcode with the supplied contents.
BitMatrix matrix = new MultiFormatWriter().encode(new String(data.getBytes(charset), charset), BarcodeFormat.QR_CODE, w, h);
MatrixToImageWriter.writeToFile(matrix, path.substring(path.lastIndexOf('.') + 1), new File(path));
}
//main() method
public static void main(String args[]) throws WriterException, IOException, NotFoundException
{
//data that we want to store in the QR code
String str= "THE HABIT OF PERSISTENCE IS THE HABIT OF VICTORY.";
//path where we want to get QR Code
String path = "C:\\Users\\Anubhav\\Desktop\\QRDemo\\Quote.png";
//Encoding charset to be used
String charset = "UTF-8";
Map<EncodeHintType, ErrorCorrectionLevel> hashMap = new HashMap<EncodeHintType, ErrorCorrectionLevel>();
//generates QR code with Low level(L) error correction capability
hashMap.put(EncodeHintType.ERROR_CORRECTION, ErrorCorrectionLevel.L);
//invoking the user-defined method that creates the QR code
generateQRcode(str, path, charset, hashMap, 200, 200);//increase or decrease height and width accodingly 
//prints if the QR code is generated 
System.out.println("QR Code created successfully.");
}
}
 Output: When we run the above Java program, it generates the following QR code in the specified directory. Reading QR Code Let's read the QR code through a Java program that we have generated above. ReadQrCode.java 
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.HashMap;
import java.util.Map;
import javax.imageio.ImageIO;
import com.google.zxing.BinaryBitmap;
import com.google.zxing.EncodeHintType;
import com.google.zxing.MultiFormatReader;
import com.google.zxing.NotFoundException;
import com.google.zxing.Result;
import com.google.zxing.WriterException;
import com.google.zxing.client.j2se.BufferedImageLuminanceSource;
import com.google.zxing.common.HybridBinarizer;
import com.google.zxing.qrcode.decoder.ErrorCorrectionLevel;
public class ReadQRcode 
{
//user-defined method that reads the QR code
public static String readQRcode(String path, String charset, Map map) throws FileNotFoundException, IOException, NotFoundException
{
BinaryBitmap binaryBitmap = new BinaryBitmap(new HybridBinarizer(new BufferedImageLuminanceSource(ImageIO.read(new FileInputStream(path)))));
Result rslt = new MultiFormatReader().decode(binaryBitmap);
return rslt.getText();
}
//main() method
public static void main(String args[]) throws WriterException, IOException, NotFoundException
{
//path where the QR code is saved
String path = "C:\\Users\\Anubhav\\Desktop\\QRDemo\\Quote.png";
//Encoding charset to be used 
String charset = "UTF-8";
Map<EncodeHintType, ErrorCorrectionLevel> hintMap = new HashMap<EncodeHintType, ErrorCorrectionLevel>();
//generates QR code with Low level(L) error correction capability
hintMap.put(EncodeHintType.ERROR_CORRECTION, ErrorCorrectionLevel.L);
System.out.println("Data stored in the QR Code is: \n"+ readQRcode(path, charset, hintMap));
}
}
 Output: We see that we get the same data that we have stored in the QR code in the previous program. Next TopicDelegation Event Model in Java ? prev next ? For Videos Join Our Youtube Channel: Join Now Help Others, Please Share Learn Latest Tutorials SoapUI RPA Manual T. Cucumber Appium PostgreSQL Solr MongoDB Gimp Verilog Teradata PhoneGap Preparation Aptitude Reasoning Verbal A. Interview Company Trending Technologies AI AWS Selenium Cloud Hadoop ReactJS D. Science Angular 7 Blockchain Git ML DevOps B.Tech / MCA DBMS DS DAA OS C. Network Compiler D. COA D. Math. E. Hacking C. Graphics Software E. Web Tech. Cyber Sec. Automata C C++ Java .Net Python Programs Control S. Data Mining Javatpoint Services JavaTpoint offers too many high quality services. Mail us on hr@javatpoint.com, to get more information about given services. Website Designing Website Development Java Development PHP Development WordPress Graphic Designing Logo Digital Marketing On Page and Off Page SEO PPC Content Development Corporate Training Classroom and Online Training Data Entry Training For College Campus JavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at hr@javatpoint.com. Duration: 1 week to 2 week Like/Subscribe us for latest updates or newsletter Learn TutorialsLearn JavaLearn Data StructuresLearn C ProgrammingLearn C++ TutorialLearn C# TutorialLearn PHP TutorialLearn HTML TutorialLearn JavaScript TutorialLearn jQuery TutorialLearn Spring Tutorial Our WebsitesJavatpoint.comHindi100.comLyricsia.comQuoteperson.comJobandplacement.com Our Services Website Development Android Development Website Designing Digital Marketing Summer Training Industrial Training College Campus Training Contact Address: G-13, 2nd Floor, Sec-3 Noida, UP, 201301, India Contact No: 0120-4256464, 9990449935Contact Us Subscribe Us Privacy PolicySitemap About Me © Copyright 2011-2018 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.
