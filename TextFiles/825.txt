https://www.geeksforgeeks.org/competitive-programming-a-complete-guide/
Competitive Programming - A Complete Guide - GeeksforGeeks
Competitive Programming - A Complete Guide - GeeksforGeeks Skip to content Tutorials Algorithms Analysis of Algorithms Asymptotic Analysis Worst, Average and Best Cases Asymptotic Notations Little o and little omega notations Lower and Upper Bound Theory Analysis of Loops Solving Recurrences Amortized Analysis What does 'Space Complexity' mean ? Pseudo-polynomial Algorithms Polynomial Time Approximation Scheme A Time Complexity Question Searching Algorithms Sorting Algorithms Graph Algorithms Pattern Searching Geometric Algorithms Mathematical Randomized Algorithms Greedy Algorithms Dynamic Programming Divide and Conquer Backtracking Branch and Bound All Algorithms Data Structures Arrays Linked List Stack Queue Binary Tree Binary Search Tree Heap Hashing Graph Advanced Data Structure Matrix Strings All Data Structures Languages C C++ Java Python C# Javascript jQuery SQL PHP Scala Perl Go Language HTML CSS Kotlin Interview Corner Company Preparation Top Topics Practice Company Questions Interview Experiences Experienced Interviews Internship Interviews Competititve Programming Design Patterns Multiple Choice Quizzes GATE GATE CS Notes 2021 Last Minute Notes GATE CS Solved Papers GATE CS Original Papers and Official Keys GATE 2021 Dates GATE CS 2021 Syllabus Important Topics for GATE CS Sudo GATE 2021 ISRO CS ISRO CS Solved Papers ISRO CS Original Papers and Official Keys ISRO CS Syllabus for Scientist/Engineer Exam UGC NET CS UGC NET CS Notes Paper II UGC NET CS Notes Paper III UGC NET CS Solved Papers CS Subjects Mathematics Operating System DBMS Computer Networks Computer Organization and Architecture Theory of Computation Compiler Design Digital Logic Software Engineering Web Technologies HTML CSS Javascript AngularJS ReactJS NodeJS Bootstrap jQuery PHP Student Campus Ambassador Program Project Geek of the Month Campus Geek of the Month Placement Course Competititve Programming Testimonials Geek on the Top Careers Internship Jobs Apply for Jobs Post a Job Courses Write Come write articles for us and get featured Practice Learn and code with the best industry experts Premium Get access to ad-free content, doubt assistance and more! Jobs Come and find your dream job with us Geeks Digest Quizzes Campus Mantri Geeks Campus Gblog Articles IDE Home Courses GBlog Puzzles What's New ? Related Articles ? Related Articles Practice for cracking any coding interview Top 10 Algorithms and Data Structures for Competitive Programming Fast I/O for Competitive Programming Arrow operator -> in C/C++ with Examples Modulo 10^9+7 (1000000007) How to begin with Competitive Programming? Algorithm Library | C++ Magicians STL Algorithm Bits manipulation (Important tactics) Prefix Sum Array - Implementation and Applications in Competitive Programming Formatted output in Java How to overcome Time Limit Exceed(TLE)? Fast I/O in Java in Competitive Programming 7 Best Coding Challenge Websites in 2020 Understanding The Coin Change Problem With Dynamic Programming Graph implementation using STL for competitive programming | Set 1 (DFS of Unweighted and Undirected) Python Input Methods for Competitive Programming Bitwise Hacks for Competitive Programming How to prepare for ACM - ICPC? C qsort() vs C++ sort() What is Competitive Programming and How to Prepare for It? Use of FLAG in programming How can one become good at Data structures and Algorithms easily? Searching in a map using std::map functions in C++ Must do Math for Competitive Programming Bit Tricks for Competitive Programming Array algorithms in C++ STL (all_of, any_of, none_of, copy_n and iota) How to get rid of Java TLE problem Matrix Exponentiation Graph implementation using STL for competitive programming | Set 2 (Weighted graph) Competitive Programming – A Complete Guide Difficulty Level : Easy Last Updated : 29 Mar, 2021 Competitive Programming is a mental sport which enables you to code a given problem under provided constraints. The purpose of this article is to guide every individual possessing a desire to excel in this sport. This article provides a detailed syllabus for Competitive Programming designed by industry experts to boost the preparation of the readers. Topic: Introduction Basics, Greedy and Bit Manipulation Number Theory and Combinatorics Searching, Sorting, and Basic Data Structures Tree and Graphs Recursion and Dynamic Programming String Algorithms Geometry and Game Theory Advance Data Structures Introduction What is Competitive Programming and How to Prepare for It? Fast I/O: CPP, Java, Python Useful libraries: CPP, Java, Python Input/Output Files: Set 1, Set 2 Tips and Tricks: Set 1, Set 2 Input Methods: CPP, Java, Python Template: CPP Language: CPP, Java, Python Time Complexity: Analysis Setting up Competitive Programming Environment: Sublime: CPP, Visual Studio: CPP and Python Basics, Greedy and Bit Manipulation Reverse an array (Related Problems: Problem 1, Problem 2) Sum of Digits Program to Check if a Given String is Palindrome in C, Python (Related Problem) Sum of array elements (Related Problem) Maximum and Minimum element of array (Related Problem) Counting frequencies of array elements (Related Problems: Problem 1, Problem 2) Float and Precision: CPP, Java, Python Prefix sum, 2D Prefix Sum Difference Array | Range update query in O(1): (Related Problems: Problem 1, Problem 2) Coordinate Compression: (Related Problem) Kadane Algorithm: (Related Problem) Activity Selection Problem: (Related Problem) Job Sequencing Problem: (Related Problem) Sliding Window: (Related Problem) Logical Operators: CPP Set 1, Set 2, Java, Python Bit Manipulation: Set 1, Set 2, Set 3 (Related Problems: Problem 1, Problem 2, Problem 3) Bitset CPP Number Theory and Combinatorics Prime Number (Related Problem) Sieve of Eratosthenes (Related Problem) Segmented Sieve (Related Problem) Find all divisors of a natural number (Related Problem) Least prime factor of numbers upto N (Related Problem) All prime factors of a number (Related Problem) Prime Factorization using Sieve O(log n) for multiple queries Sum of all factors of a number (Related Problem) Gcd of Two numbers, Lcm of two numbers (Related Problem) Linear Diophantine Equations Euclidean algorithms (Basic and Extended) Euler’s Totient Function (Related Problem) Euler’s Totient function for all numbers smaller than or equal to n Inclusion Exclusion Principle Pigeon Hole Principle Modular Operations Modular Inverse: (Related Problem 1, Problem 2) Chinese Remainder Theorem: Set 1, Set 2 Power(x, y) in O( logN ) Power(x, y) % mod: (Related Problem 1, Problem 2) Matrix Exponentiation: (Related Problem) Permutation and Combination: Set 1, Set 2, Quiz 1, Quiz 2 nCr: Set 1, Set 2 nCr % mod: Set1, Set 2: (Related Problem) nCr % mod for multiple queries: (Related Problem) Catalan numbers: Applications and Related Problem Gaussian Elimination Searching, Sorting and Basic Data Structures Linear Search (Related Problems : Problem 1, Problem 2) Binary Search, Unbounded Binary Search (Related Problems : Problem 1, Problem 2, Problem 3) Inbuilt sorting O(logN): CPP, Java, Python (Related Problems : Problem 1, Problem 2, Problem 3, Problem 4) Merge Sort (Related Problems : Problem 1, Problem 2) Quick Sort (Related Problems : Problem) Stack: Implementation in CPP, Java, Python (Related Problems : Problem 1, Problem 2, Problem 3) Queue: Implementation in CPP, Java, Python (Related Problems : Problem 1, Problem 2 , Problem 3) Deque: Implementation in CPP, Java, Python (Related Problems : Problem) Priority Queue: Implementation in CPP, Java, Python (Related Problems : Problem 1, Problem 2, Problem 3) Tree and Graphs Tree BFS, Tree DFS (Related Problems : Problem 1, Problem 2, Problem 3) Graph BFS, Graph BFS 2, Graph DFS (Related Problems : Problem 1, Problem 2) Dijkstra’s Shortest Path Algorithm (Related Problems : Problem 1, Problem 2) Bellman – Ford Algorithm (Related Problem) Floyd Warshall Algorithm (Related Problem) 0-1 BFS, Dial’s Algorithm Detect cycle: Directed, Undirected (Related Problems : Problem 1, Problem 2) Disjoint set(union-find): Set 1, Set 2, Set 3 (Related Problem) Topological Sorting, Kahn’s Algorithm (Related Problem) Minimum Spanning Tree: Prim’s Algorithm, Kruskal Algorithm (Related Problem) Bipartite or not, M-Coloring (Related Problems : Problem 1, Problem 2, Problem 3) Strongly Connected Components: Tarjan, Kosaraju (Related Problems : Problem 1 , Problem 2) Euler Path: Undirected, Directed (Related Problem) Flow Algorithms: Set 1, Set 2, Dinic’s Algorithm (Related Problems : Problem 1, Problem 2) Diameter of Tree Centroid Decomposition Lowest Common Ancestor Recursion and Dynamic Programming Recursion: Quiz 1, Quiz 2, Quiz 3, Quiz 4, Quiz 5, Quiz 6, Quiz 7 (Related Problems : Problem 1, Problem 2, Problem 3) Backtracking: (Related Problems : Probem 1, Problem 2) Dp Introduction: Set 1, Set 2, Set 3, Set 4, Set 5 Most useful Dynamic Programming questions Additional DP Problems : Problem 1, Problem 2, Problem 3, Problem 4 Dp on Trees: Set 1, Set 2 Dp on Bit Masking: Set 1, Set 2, Set 3 Digit Dp String Algorithms Suffix Tree: Set 1, Set 2 Z Algorithm KMP Algorithm, Rabin-Karp Algorithm (Related Problem) Manacher’s Algorithm: Set 1, Set 2, Set 3, Set 4 Suffix Automation: Set 1, Set 2 Geometry and Game Theory Closest Pair of Points How to check if two given line segments intersect? (Related Problem) How to check if a given point lies inside or outside a polygon? Convex Hull: Set 1, Set 2 (Related Problem) Given n line segments, find if any two segments intersect Check whether a given point lies inside a triangle or not How to check if given four points form a square: (Related Problem) Combinatorial Game Theory: Set 1 , Set 2, Set 3, Set 4 Minimax Algorithm in Game Theory: Set 1, Set 2, Set 3, Set 4, Set 5 Variation in Nim Game Find the winner in nim-game Optimal Strategy for a Game Advance Data Structures Trie: Set 1, Set 2, Set 3, (Related Problems: Problem 1, Problem 2, Problem 3, Problem 4, Problem 5) Fenwick Tree: Set 1, Set 2, Set 3, Set 4, (Related Problem) Segment Tree: Set 1, Set 2, Set 3 (Related Problem) Sparse Table: Set 1, Set 2 Sqrt Decomposition: Set 1, Set 2 Heavy Light Decomposition: Set 1, Set 2 Meet in the Middle MO’s Algorithm, Problem Policy based Data Structure You may also check Geeksforgeeks Online Courses to Learn Data Structures and Algorithms, well designed courses taught by Industry Experts. My Personal Notes arrow_drop_up Save favorite_border Like first_page Previous How to install MongoDB on Windows? Next last_page How to use PostgreSQL Databse in Django? Recommended Articles Page : Tips and Tricks for Competitive Programmers | Set 2 (Language to be used for Competitive Programming) 20, Mar 16 Complete Guide to Install C++17 in Windows 14, Sep 20 Top 10 Algorithms and Data Structures for Competitive Programming 16, Dec 15 How to begin with Competitive Programming? 30, Dec 15 How to become a master in competitive programming? 17, Feb 16 Competitive Programming: Conquering a given problem 28, Mar 16 A Better Way To Approach Competitive Programming 06, Apr 16 getchar_unlocked() - faster input in C/C++ for Competitive Programming 18, Apr 16 Bitwise Hacks for Competitive Programming 27, Apr 16 Some important shortcuts in Competitive Programming 26, Apr 16 Writing C/C++ code efficiently in Competitive programming 07, Feb 17 Input/Output from external file in C/C++, Java and Python for Competitive Programming 26, Feb 17 Python Input Methods for Competitive Programming 01, Mar 17 Input/Output from external file in C/C++, Java and Python for Competitive Programming | Set 2 19, May 17 C++ tricks for competitive programming (for C++ 11) 03, Jun 17 Bit Tricks for Competitive Programming 07, Jun 17 Common mistakes to be avoided in Competitive Programming in C++ | Beginners 13, Jun 17 Knowing the complexity in competitive programming 24, May 18 C++: Methods of code shortening in competitive programming 04, Sep 18 How to read Competitive Programming Questions? 10, Sep 18 How can competitive programming help you get a job? 02, Oct 18 Some useful C++ tricks for beginners in Competitive Programming 16, Jan 19 Interactive Problems in Competitive Programming | Set 2 09, Sep 19 What is Competitive Programming and How to Prepare for It? 07, Oct 19 Article Contributed By : GeeksforGeeks Vote for difficulty Current difficulty : Easy Easy Normal Medium Hard Expert Article Tags : Competitive Programming Report Issue What’s New Data Structures and Algorithms – Self Paced Course View Details Ad-Free Experience – GeeksforGeeks Premium View Details Most popular in Competitive Programming Reduce the string by removing K consecutive identical characters I Can't Use Logic In Programming. What Should I Do? Runtime Errors C++: Methods of code shortening in competitive programming Most important type of Algorithms More related articles in Competitive Programming Breadth First Traversal ( BFS ) on a 2D array Multistage Graph (Shortest Path) Count of submatrix with sum X in a given Matrix Container with Most Water String hashing using Polynomial rolling hash function Writing code in comment? Please use ide.geeksforgeeks.org, generate link and share the link here. Load Comments 5th Floor, A-118, Sector-136, Noida, Uttar Pradesh - 201305 feedback@geeksforgeeks.org Company About Us Careers Privacy Policy Contact Us Copyright Policy Learn Algorithms Data Structures Languages CS Subjects Video Tutorials Practice Courses Company-wise Topic-wise How to begin? Contribute Write an Article Write Interview Experience Internships Videos @geeksforgeeks , Some rights reserved We use cookies to ensure you have the best browsing experience on our website. By using our site, you acknowledge that you have read and understood our Cookie Policy & Privacy Policy Got It !
