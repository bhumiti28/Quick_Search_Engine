https://www.geeksforgeeks.org/a-time-complexity-question/
A Time Complexity Question - GeeksforGeeks
A Time Complexity Question - GeeksforGeeks Skip to content Tutorials Algorithms Analysis of Algorithms Asymptotic Analysis Worst, Average and Best Cases Asymptotic Notations Little o and little omega notations Lower and Upper Bound Theory Analysis of Loops Solving Recurrences Amortized Analysis What does 'Space Complexity' mean ? Pseudo-polynomial Algorithms Polynomial Time Approximation Scheme A Time Complexity Question Searching Algorithms Sorting Algorithms Graph Algorithms Pattern Searching Geometric Algorithms Mathematical Randomized Algorithms Greedy Algorithms Dynamic Programming Divide and Conquer Backtracking Branch and Bound All Algorithms Data Structures Arrays Linked List Stack Queue Binary Tree Binary Search Tree Heap Hashing Graph Advanced Data Structure Matrix Strings All Data Structures Languages C C++ Java Python C# Javascript jQuery SQL PHP Scala Perl Go Language HTML CSS Kotlin Interview Corner Company Preparation Top Topics Practice Company Questions Interview Experiences Experienced Interviews Internship Interviews Competititve Programming Design Patterns Multiple Choice Quizzes GATE GATE CS Notes 2021 Last Minute Notes GATE CS Solved Papers GATE CS Original Papers and Official Keys GATE 2021 Dates GATE CS 2021 Syllabus Important Topics for GATE CS Sudo GATE 2021 ISRO CS ISRO CS Solved Papers ISRO CS Original Papers and Official Keys ISRO CS Syllabus for Scientist/Engineer Exam UGC NET CS UGC NET CS Notes Paper II UGC NET CS Notes Paper III UGC NET CS Solved Papers CS Subjects Mathematics Operating System DBMS Computer Networks Computer Organization and Architecture Theory of Computation Compiler Design Digital Logic Software Engineering Web Technologies HTML CSS Javascript AngularJS ReactJS NodeJS Bootstrap jQuery PHP Student Campus Ambassador Program Project Geek of the Month Campus Geek of the Month Placement Course Competititve Programming Testimonials Geek on the Top Careers Internship Jobs Apply for Jobs Post a Job Courses Write Come write articles for us and get featured Practice Learn and code with the best industry experts Premium Get access to ad-free content, doubt assistance and more! Jobs Come and find your dream job with us Geeks Digest Quizzes Campus Mantri Geeks Campus Gblog Articles IDE Home Courses GBlog Puzzles What's New ? Related Articles ? Related Articles Pseudo-polynomial Algorithms NP-Completeness | Set 1 (Introduction) A Time Complexity Question Merge Sort QuickSort HeapSort Binary Heap Time Complexity of building a heap Applications of Heap Data Structure Binomial Heap Fibonacci Heap | Set 1 (Introduction) Fibonacci Heap – Insertion and Union Fibonacci Heap – Deletion, Extract min and Decrease key Leftist Tree / Leftist Heap K-ary Heap Iterative HeapSort Program for Fibonacci numbers Program for nth Catalan Number Bell Numbers (Number of ways to Partition a Set) Binomial Coefficient | DP-9 Permutation Coefficient Tiling Problem Gold Mine Problem Coin Change | DP-7 Find minimum number of coins that make a given value Analysis of Algorithms | Set 1 (Asymptotic Analysis) Analysis of Algorithm | Set 4 (Solving Recurrences) Analysis of Algorithms | Set 3 (Asymptotic Notations) Analysis of Algorithms | Set 2 (Worst, Average and Best Cases) Understanding Time Complexity with Simple Examples A Time Complexity Question Difficulty Level : Easy Last Updated : 29 Oct, 2020 What is the time complexity of following function fun()? Assume that log(x) returns log value in base 2. C void fun() { int i, j; for (i = 1; i <= n; i++) for (j = 1; j <= log(i); j++) printf("GeeksforGeeks"); } Time Complexity of the above function can be written as ?(log 1) + ?(log 2) + ?(log 3) + . . . . + ?(log n) which is ?(log n!) Order of growth of ‘log n!’ and ‘n log n’ is same for large values of n, i.e., ?(log n!) = ?(n log n). So time complexity of fun() is ?(n log n). The expression ?(log n!) = ?(n log n) can be easily derived from following Stirling’s approximation (or Stirling’s formula). log n! = n*log n - n = O(n*log(n)) 
 Please write comments if you find anything incorrect, or you want to share more information about the topic discussed above. Sources: http://en.wikipedia.org/wiki/Stirling%27s_approximation Attention reader! Don’t stop learning now. Get hold of all the important DSA concepts with the DSA Self Paced Course at a student-friendly price and become industry ready. My Personal Notes arrow_drop_up Save favorite_border Like first_page Previous NP-Completeness | Set 1 (Introduction) Next last_page Merge Sort Recommended Articles Page : An interesting time complexity question 09, Feb 15 Time Complexity of building a heap 28, May 11 Time Complexity where loop variable is incremented by 1, 2, 3, 4 .. 01, Sep 15 Time Complexity of a Loop when Loop variable “Expands or Shrinks” exponentially 22, Nov 16 Time complexity of recursive Fibonacci program 20, Oct 17 Practice Questions on Time Complexity Analysis 12, Dec 17 Python Code for time Complexity plot of Heap Sort 06, Sep 18 C program for Time Complexity plot of Bubble, Insertion and Selection Sort using Gnuplot 17, Jan 20 Time Complexity of Loop with Powers 30, Aug 15 Time Complexity Analysis | Tower Of Hanoi (Recursion) 27, Feb 18 Understanding Time Complexity with Simple Examples 14, Nov 17 Time Complexity of Euclidean Algorithm 24, Mar 21 Complexity of different operations in Binary tree, Binary Search Tree and AVL tree 19, Jan 18 Knowing the complexity in competitive programming 24, May 18 Cyclomatic Complexity 20, Jun 18 Complexity Analysis of Binary Search 29, May 19 Complexity analysis of various operations of Binary Min Heap 26, Jun 20 What does 'Space Complexity' mean? 17, Jun 11 Time taken by Loop unrolling vs Normal loop 19, Feb 18 Measure execution time with high precision in C/C++ 10, Aug 18 Microsoft Interview experience for full time position of software engineer at Microsoft Ireland Research 29, Apr 19 Algorithms Sample Questions | Set 3 | Time Order Analysis 27, May 19 Time-Space Trade-Off in Algorithms 29, Oct 20 Time complexities of different data structures 29, Dec 20 Article Contributed By : GeeksforGeeks Vote for difficulty Current difficulty : Easy Easy Normal Medium Hard Expert Improved By : vroghelia6 Article Tags : Analysis Report Issue What’s New Data Structures and Algorithms – Self Paced Course View Details Ad-Free Experience – GeeksforGeeks Premium View Details Most popular in Analysis Complexity of different operations in Binary tree, Binary Search Tree and AVL tree Practice Questions on Time Complexity Analysis Analysis of Algorithms | Set 4 (Analysis of Loops) Analysis of Algorithms | Big-O analysis Analysis of different sorting techniques More related articles in Analysis Complexity Analysis of Binary Search Tail Recursion Difference between Big Oh, Big Omega and Big Theta Analysis of Algorithms | Set 5 (Practice Problems) What does 'Space Complexity' mean? Writing code in comment? Please use ide.geeksforgeeks.org, generate link and share the link here. Load Comments 5th Floor, A-118, Sector-136, Noida, Uttar Pradesh - 201305 feedback@geeksforgeeks.org Company About Us Careers Privacy Policy Contact Us Copyright Policy Learn Algorithms Data Structures Languages CS Subjects Video Tutorials Practice Courses Company-wise Topic-wise How to begin? Contribute Write an Article Write Interview Experience Internships Videos @geeksforgeeks , Some rights reserved We use cookies to ensure you have the best browsing experience on our website. By using our site, you acknowledge that you have read and understood our Cookie Policy & Privacy Policy Got It !
