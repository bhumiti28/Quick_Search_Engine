how git version control works geeksforgeeks skip content tutorials algorithms analysis algorithms asymptotic analysis worst average best cases asymptotic notations little o little omega notations lower upper bound theory analysis loops solving recurrences amortized analysis what space complexity mean pseudopolynomial algorithms polynomial time approximation scheme time complexity question searching algorithms sorting algorithms graph algorithms pattern searching geometric algorithms mathematical randomized algorithms greedy algorithms dynamic programming divide conquer backtracking branch bound all algorithms data structures arrays linked list stack queue binary tree binary search tree heap hashing graph advanced data structure matrix strings all data structures languages c c java python c javascript jquery sql php scala perl go language html css kotlin interview corner company preparation top topics practice company questions interview experiences experienced interviews internship interviews competititve programming design patterns multiple choice quizzes gate gate cs notes last minute notes gate cs solved papers gate cs original papers official keys gate dates gate cs syllabus important topics gate cs sudo gate isro cs isro cs solved papers isro cs original papers official keys isro cs syllabus scientistengineer exam ugc net cs ugc net cs notes paper ii ugc net cs notes paper iii ugc net cs solved papers cs subjects mathematics operating system dbms computer networks computer organization architecture theory computation compiler design digital logic software engineering web technologies html css javascript angularjs reactjs nodejs bootstrap jquery php student campus ambassador program project geek month campus geek month placement course competititve programming testimonials geek top careers internship jobs apply jobs post job courses write come write articles us get featured practice learn code best industry experts premium get access adfree content doubt assistance jobs come find dream job us geeks digest quizzes campus mantri geeks campus gblog articles ide home courses gblog puzzles whats new related articles related articles socket programming cc get post requests using python top projects beginners practice html css skills must do coding questions product based companies fast io competitive programming days code complete guide beginners experienced differences procedural object oriented programming working csv files python types software testing working pdf files python oops object oriented design technical scripter event geeksforgeeks xml parsing python difference fat exfat ntfs file system supervised unsupervised learning web web web difference data structures algorithms online courses free paid days form new habit coding you frontend vs backend gate cs revised syllabus twitter sentiment analysis using python getting started machine learning top ides c you should try once how overcome time limit exceedtle socket programming cc handling multiple clients server without multi threading implementing web scraping python beautifulsoup top system design interview questions answers best coding challenge websites ethical issues information technology top programming languages rule how git version control works last updated apr git popular common tool used programmers programming world forget tool moment look picture given flashback laughing yes youre picture reminds developer journey tried keep backup files scared something wrong project you followed traditional approach thinking may create mess project you create files project make changes implement something new copy files give name blogpostnew again make changes create another copy another filename blogpostbackup goes directory filled multiple files single project files project blogpostold blogpostone blogposttwo blogpostbackup blogpostfinal etc after couple days open project you want check previous copy see tons files project become confused now unable identify file sequence files which file running smoothly files kind changes file changed file serves purpose project youre alone point development career huge pain check code files manually identify purpose now might understood importance git programmer familiar tool programmers life saves day makes life software development teams much easier its super easy manage code git also easy fix bug something goes wrong today programmers especially newbies know importance you might used various commands gitgit add git push git pull git commit etc ask things work behind scene flow git looks like would answer most us know dont know today blog going explore amazing tool bit we discuss indepth git works internally take chair sit back relax give weekend couple hours know favorite tool bit quick introduction case youre familiar tool read blog ultimate guide git github simple words git keeps backup project keeps track source code taking kind snapshot assigns unique value sha hash snapshot differentiate simple words git creates save points files check retrieve whenever want lets come main pointthe core functionality git how git handle files workflow states git core functionality git works mainly three file states modified state staged state committed state include remote repository divide core functionality four states your files one states we discuss one better understanding going take reallife example consider scenario asked create nice photo album caption message along pictures how would most probably perform actions given you take pictures include photo album you havent pasted yet album going affect photo album you freedom filter pictures want include photo album havent clicked good picture also choice take picture necessary next step filter pictures want include print imagine set next empty page album basically preparing photos creating sort staging area glue photo album havent done yet once youre ready picture glue photo album message title describing moment event related picture time turn pages album remind things looked like specific moment we relate example four states git understand much better how lets discuss modified state state files modified changes saved you instruct git monitor files basically uncommitted files taking picture like making changes files you create files write code add features delete files youre preparing files save git commit files permanently saved work still progress anytime write rewrite delete make changes file staged state state files prepared committed git repository files committed prepared committed current state version you explicitly authorize git monitor file versions git hasnt committed files even adding files staging area still option modify files you make modifications add modification staging area like clicking new pictures deciding paste photo album committed state final stage successfully save files git repository create commit creating commit like gluing pictures photo album final phase record staged version file git directory you write message title pictures give information pictures meant commit messages git works way you write commit message give information changes done code features added code always write descriptive commit message describes clearly features added changes made bug resolved codebase now lets talk file locations files working files based state file discuss location git place file locations different states locations file different we going discuss complete workflow based state locations file working directory when create folder system resides working directory local folder workspace basically working directory local folder project files now might understood modified files reside working directory dont confused working directory git directory working directory created user git directory created git staging area your files staged state reside staging area basically staging area index git parlance located git directory stores information files queue committed git directory directory heart git magic happens files committed state reside directory git directory created git stores files committed instructed user monitor git folder stores object databases metadata files git clone command followed url creates local copy repository workspace add command add files workspace index staging area file staged marked committed yet committed when execute commit commands files staged changes committed local repository now take look picture given understand complete workflow image selfexplanatory shows complete workflow you might understood whats purpose command git few things image would like explain make concept clear picture git fetch command gets files remote repository local repository yet workspace get updated file local repository workspace execute git merge command your files local workspace updated remote repository perform bot operation execute git pull command now question isif everything one single command git pull need execute two separate commands git fetch git merge answer isexecuting two separate commands allows us compare files actually get latest version files words fetch files remote repository using git fetch command run git diff head command check whats differences files exist working directory files exist local repository based differences decide whether want merge files git diff without head command tells difference files exist working directory files staged commit command basically tells could still add stage commit havent already git internals when open project initialized git come across directory git place magic happens section discuss internal structure git taking closer look directory find four important subdirectories lets discuss role four subdirectories objects directory acts like database stores repos files content encoded compressed refs refs stored normal text files gitrefs directory file stores pointer commit objects simple words need manipulate object need remember hash object memorizing hashes difficult git reference refs contain hash commit object head file contains path reference points current branch working check config file find repo configuration some plumbing commands you should know almost git commands git add git commit made lowlevel core commands commands called plumbing commands we know new word take look picture given explain detail suppose working directory initialize git after initializing project create put file git creates working tree moment run git status command see something like when files staged git creates blob blob contains content file binary format blob assigned characters hashsha hash value identified uniquely after blob saved objects database git repo multiple blobs staging area git creates tree prepare blobs committed tree contains pointer blob names snapshot files want commit before committing files take users identification track made commit tree stores authorand committer also message commit final thought we tried best make familiar internal structure git might idea workflow git how git commands works hood operations performed internally my personal notes arrowdropup save favoriteborder like firstpage previous modify array sorting reversal bits array element next lastpage java programming examples recommended articles page centralized vs distributed version control which one should we choose aug version control systems jul top free opensource version control tools jun how install configure use git ubuntu sep git introduction github sep how use git ubuntu part sep introduction installation git apr git setting repository apr saving file git jun overturning changes git jul git debugging jul examining git jul introduction git branch aug gitcheckout merge sep take advantages git github stay motivated consistent while coding dec best git practices follow teams feb ultimate guide git github dec different version blockchain mar how google search works apr how gps works may how react native works jun how gsm works jun how antivirus works dec how cloud storage actually works jan article contributed anuupadhyay anuupadhyay vote difficulty easy normal medium hard expert article tags gblog report issue whats new data structures algorithms self paced course view details adfree experience geeksforgeeks premium view details most popular gblog how prepare infytq infosys certification exam different ways connect one computer another computer top python developers skills you must know guidelines software developers perform better job what competitive programming how prepare more related articles gblog introduction hill climbing artificial intelligence top kali linux tools hacking downloading files web using python introduction programming paradigms how include graphicsh codeblocks writing code comment please use idegeeksforgeeksorg generate link share link load comments th floor sector noida uttar pradesh feedbackgeeksforgeeksorg company about us careers privacy policy contact us copyright policy learn algorithms data structures languages cs subjects video tutorials practice courses companywise topicwise how begin contribute write article write interview experience internships videos geeksforgeeks some rights reserved we use cookies ensure best browsing experience website using site acknowledge read understood cookie policy privacy policy got
