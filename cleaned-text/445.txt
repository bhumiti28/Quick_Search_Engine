web api tutorial javatpoint home web api net data science java python jira testng selenium projects interview q comment forum training web api web api tutorial aspnet web api tutorial tutorial discuss following topics what web api who uses api aspnet web api aspnet web api features restful services principles rest api methods rest api implementing rest api simple application need web api mvc vs web api web api vs wcf web api vs web services web api security aspnet web api tutorial provides basic advanced concepts aspnet our aspnet tutorial designed beginners professionals what web api web api enhanced form web application provide services different devices like laptop mobile others today kind businesses use internet costeffective way expand business international market web application helps exchange information internet also helps perform secure transaction web sites web applications popular web browser available default dont need installation software computers operating systems example facebook social networking web application flickr photosharing web application wikipedia majorly used example web application technically web application consists two types scripts clientside scripts javascript html clientside scripting languages used design web forms present information users serverside scripts asp serverside scripting languages used perform business logic database related operations like storing retrieving information web application humansystem interaction either single page application provide information business collection web pages used take information user providing services user who uses api services accessed different kind users like web browsers mobile applications desktop applications iots internet things aspnet web api api stands application programming interface aspnet web api extensible framework building http hypertext transfer protocol services accessed client browsers mobile devices example make reservation different web applications like makemytrip ixigo paytm reservation web applications applications make reservation using credentials irctc web site ie user performing reservation must login credentials irctc web site services accessed different kind users like web browsers mobile applications desktop applications iots internet things web api services used application used distributed system web api takes requests different type client devices like mobile laptop etc sends webserver process returns desired data client custom web application using different kind apis web api systemsystem interaction information one system processed another system resultant data shown viewer lets take another example web api examples want mcdonalds burger let us suppose mcdonalds gives permission takeaways cooks others here mcdonaldstakeaways cook like api allows systems cooks access services provide desired data aspnet web api features aspnet web api much similar aspnet mvc contains similar features aspnet mvc like routing controllers action results filter model etc misconception aspnet web api part aspnet mvc framework used type web application standalone services developed using web api aspnet web api framework widely used develop restful services restful services web api enhanced form web application soap simple object access protocol xml based protocol developing connected web applications problem soap request metadata attached data transferred metadata converts small data heavy data server web api may may restful services always http based services rest stands representational state transfer rest api state object sent server find desired result rest architectural pattern developing api uses http underlying communication method when using http based service example bookmyshow app need data managed form like json format xml format client requests information sending parameters using api methods example want book show want know details like city movie name place timing we send state object webserver api check whether data available data available movie available instance send back response client object values object sent client ie basically state object sent client time dont create object rest api architectural style well approach communications purpose often used various web developments stateless clientserver model principles rest api six principles rest api stateless clientserver uniform interface cacheable layered system code demand stateless when request client sent server contains required information make server process request may part querystring url example lets suppose resource requested url uniform resource locator clientserver separating functionality helps increase user interface portability across multiple platforms well extended scalability server components uniform interface obtain uniformity throughout application rest defined four interface constraints resource identification resource manipulation using representations selfdescriptive massages hypermedia engine web application cacheable order provide better performance applications made cacheable done marking response cacheable noncacheable implicitly explicitly resource defined cacheable client cache reuse response data equivalence requests layered system layered system allows application stable limiting component behavior layered architecture also helps enhance security component layer cannot interact beyond layer code demand constraint used optionally least analyze simplify client creating smart application doesnt lie code structure methods rest api working web technologies work crud applications applications crud create read update delete resource here resource defined desired result example httpsinbookmyshowcomnoidamovies example user looking movies city noida bookmyshow application resource data client looking perform actions like create resource read resource update resource delete resource use http methods also called rest methods now basic crud operations mapped http protocols following manner crud methods rest api methods description create post method refers ccreate part crud used create resource read get method refers rretrieve part crud used read resource update put method refers uupdate part crud used update resource delete delete method refers ddelete part crud used delete resource rest api best used distributed systems distributed database used everywhere database stores data crud create retrieve update delete operations performed so lets example getting dishes resource wwwtestwebsitecomdishes now lets assume want specific dish resource wwwtestwebsitecomdishes implementing rest api simple application lets create rest api service students firstly open visual studio visual studio now select create new project now select template aspnet web application net framework c name project webapistudentssample aspnet project dialog select empty template also check web api option click ok default structure generated follows adding studentcs class models folder add class name student define properties business logic we also define logics validation data access etc rightclick models select add option select class give name class studentcs add following code define properties student class
