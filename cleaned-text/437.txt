data structures ds tutorial javatpoint home data structure c c c java sql html css javascript ajax android cloud design pattern quiz projects interview q comment forum ds tutorial ds tutorial ds introduction ds algorithm asymptotic analysis ds pointer ds structure ds array ds array d array ds linked list linked list types linked list singly linked list doubly linked list circular linked list circular doubly list skip list ds ds stack ds stack array implementation linked list implementation ds queue ds queue types queues array representation linked list representation circular queue deque priority queue ds tree ds tree binary tree binary search tree avl tree b tree b tree ds graph ds graph graph implementation bfs algorithm dfs algorithm spanning tree ds searching linear search binary search ds sorting bubble sort bucket sort comb sort counting sort heap sort insertion sort merge sort quick sort radix sort selection sort shell sort bitonic sort cocktail sort cycle sort tim sort differences linear vs nonlinear array vs linked list stack vs queue linear vs circular queue linear search vs binary search singly linked list vs doubly linked list binary vs binary search tree tree vs graph binary search tree vs avl tree red black tree vs avl tree b tree vs b tree quick sort vs merge sort bfs vs dfs stack vs heap bubble sort vs selection sort misc trie data structure heap data structure splay tree fundamental ds hash table preorder traversal tree traversal implementation queue using stacks implementation stack using queue binomial heap postorder traversal sparse matrix detect loop linked list inorder traversal convert infix postfix notation convert infix prefix notation conversion prefix postfix expression conversion postfix prefix expression ds mcq data structure mcq next data structures tutorial data structures ds tutorial provides basic advanced concepts data structure our data structure tutorial designed beginners professionals data structure way store organize data used efficiently our data structure tutorial includes topics data structure array pointer structure linked list stack queue graph searching sorting programs etc what data structure data structure name indicates organizing data memory many ways organizing data memory already seen one data structures ie array c language array collection memory elements data stored sequentially ie one another words say array stores elements continuous manner organization data done help array data structures also ways organize data memory lets see different types data structures data structure programming language like c c java etc set algorithms use programming language structure data memory structure data memory n number algorithms proposed algorithms known abstract data types abstract data types set rules types data structures two types data structures primitive data structure nonprimitive data structure primitive data structure primitive data structures primitive data types int char float double pointer primitive data structures hold single value nonprimitive data structure nonprimitive data structure divided two types linear data structure nonlinear data structure linear data structure arrangement data sequential manner known linear data structure data structures used purpose arrays linked list stacks queues data structures one element connected one another element linear form when one element connected n number elements known nonlinear data structure best example trees graphs case elements arranged random manner we discuss data structures brief coming topics now see common operations perform data structures data structures also classified static data structure type data structure size allocated compile time therefore maximum size fixed dynamic data structure type data structure size allocated run time therefore maximum size flexible major operations major common operations performed data structures searching we search element data structure sorting we sort elements data structure either ascending descending order insertion we also insert new element data structure updation we also update element ie replace element another element deletion we also perform delete operation remove element data structure which data structure data structure way organizing data used efficiently here used word efficiently terms space time example stack adt abstract data type uses either arrays linked list data structure implementation therefore conclude require data structure implement particular adt adt tells done data structure tells done words say adt gives us blueprint data structure provides implementation part now question arises one get know data structure used particular adt different data structures implemented particular adt different implementations compared time space example stack adt implemented arrays linked list suppose array providing time efficiency linked list providing space efficiency one best suited current users requirements selected advantages data structures following advantages data structure efficiency choice data structure implementing particular adt proper makes program efficient terms time space reusability data structures provide reusability means multiple client programs use data structure abstraction data structure specified adt also provides level abstraction client cannot see internal working data structure worry implementation part client see interface data structures index ds basics ds tutorial ds introduction ds algorithm ds asymptotic analysis ds pointer ds structure ds array array d array ds linked list linked list insertion beginning insertion end insertion specified node deletion beginning deletion end deletion specified node traversing searching doubly linked list insertion beginning insertion end insertion specified node deletion beginning deletion end deletion node given data traversing searching circular linked list insertion beginning insertion end deletion beginning deletion end traversing searching circular doubly list insertion beginning insertion end deletion beginning deletion end ds stack ds stack array implementation linked list implementation ds queue ds queue array implementation linked list implementation circular queue ds tree tree binary tree preorder traversal inorder traversal postorder traversal binary search tree searching bst insertion bst deletion bst avl tree insertion avl tree ll rotation lr rotation rl rotation rr rotation deletion avl tree b tree b tree red black tree ds graph ds graph graph implementation bfs algorithm dfs algorithm spanning tree prims algorithm kruskals algorithm ds searching linear search binary search ds sorting bubble sort bucket sort comb sort counting sort heap sort insertion sort merge sort quick sort radix sort selection sort shell sort bitonic sort cocktail sort cycle sort tim sort interview questions ds interview questions singly linked list programs program create display singly linked list program create singly linked list n nodes count number nodes program create singly linked list n nodes display reverse order program delete new node beginning singly linked list program delete new node middle singly linked list program delete node end singly linked list program determine whether singly linked list palindrome program find maximum minimum value node singly linked list program insert new node middle singly linked list program insert new node beginning singly linked list program insert new node end singly linked list program remove duplicate elements singly linked list program search element singly linked list program sort elements singly linked list program swap nodes singly linked list without swapping data program swap last element singly linked list first one doubly linked list programs program convert given binary tree doubly linked list program create doubly linked list from ternary tree program create doubly linked list n nodes count number nodes program create doubly linked list n nodes display reverse order program create display doubly linked list program delete new node from beginning doubly linked list program delete new node from end doubly linked list program delete new node from middle doubly linked list program find maximum minimum value node from doubly linked list program insert new node beginning doubly linked list program insert new node end doubly linked list program insert new node middle doubly linked list program remove duplicate elements from doubly linked list program rotate doubly linked list n nodes program search element doubly linked list program sort elements doubly linked list circular linked list programs program create circular linked list n nodes count number nodes program create circular linked list n nodes display reverse order program create display circular linked list program delete new node from beginning circular linked list program delete new node from end circular linked list program delete new node from middle circular linked list program find maximum minimum value node from circular linked list program insert new node beginning circular linked list program insert new node end circular linked list program insert new node middle circular linked list program remove duplicate elements from circular linked list program search element circular linked list program sort elements circular linked list tree programs program calculate difference between sum odd level even level nodes binary tree program construct binary search tree perform deletion inorder traversal program convert binary tree binary search tree program determine whether leaves same level program determine whether two trees identical program find maximum width binary tree program find largest element binary tree program find maximum depth height tree program find nodes which maximum distance binary tree program find smallest element binary tree program find sum nodes binary tree program find total number possible binary search trees n keys program implement binary tree using linked list program search node binary tree prerequisite before learning data structure must basic knowledge c audience our data structure tutorial designed help beginners professionals problem we assure find problem data structure tutorial mistake please post contact form next topicdata structure introduction next videos join our youtube channel join now help others please share learn latest tutorials soapui rpa manual t cucumber appium postgresql solr mongodb gimp verilog teradata phonegap preparation aptitude reasoning verbal interview company trending technologies ai aws selenium cloud hadoop reactjs d science angular blockchain git ml devops btech mca dbms ds daa os c network compiler d coa d math e hacking c graphics software e web tech cyber sec automata c c java net python programs control s data mining javatpoint services javatpoint offers many high quality services mail us hrjavatpointcom get information given services website designing website development java development php development wordpress graphic designing logo digital marketing page off page seo ppc content development corporate training classroom online training data entry training college campus javatpoint offers college campus training core java advance java net android hadoop php web technology python please mail requirement hrjavatpointcom duration week week likesubscribe us latest updates newsletter learn tutorialslearn javalearn data structureslearn c programminglearn c tutoriallearn c tutoriallearn php tutoriallearn html tutoriallearn javascript tutoriallearn jquery tutoriallearn spring tutorial our websitesjavatpointcomhindi comlyricsiacomquotepersoncomjobandplacementcom our services website development android development website designing digital marketing summer training industrial training college campus training contact address g nd floor sec noida up india contact contact us subscribe us privacy policysitemap about me copyright wwwjavatpointcom all rights reserved developed javatpoint
