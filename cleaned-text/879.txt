java vs java javatpoint home java programs oops string regex exception multithreading collections jdbc swing javafx servlet jsp spring spring boot projects interview questions java training java tutorial what java history java features java c vs java hello java program program internal how set path jdk jre jvm jvm java virtual machine java variables java data types unicode system operators keywords control statements java ifelse java switch java loop java while loop java do while loop java break java continue java comments java programs java object class java oops concepts naming convention object class method constructor static keyword keyword java inheritance inheritanceisa aggregationhasa java polymorphism method overloading method overriding covariant return type super keyword instance initializer block final keyword runtime polymorphism dynamic binding instanceof operator java abstraction abstract class interface abstract vs interface java encapsulation package access modifiers encapsulation java array java array java oops misc object class object cloning math class wrapper class java recursion call value strictfp keyword javadoc tool command line arg object vs class overloading vs overriding java string java regex exception handling java inner classes java multithreading java io java networking java awt events java swing javafx java applet java reflection java date java conversion java collection java jdbc java misc java new features rmi internationalization interview questions java mcq next prev java vs java java publicly available september market opensource reference implementation java se platform version java released four years releasing java java comes new features provide functionality below features added four half years two versions modularity modularity feature available java one biggest changes added java using modularity split programs applications different modules modularity allows us test application easily also managing access parts code publicfacing we compile code without compiling file simply placed module name behaves way java compile code release flag simple combination target source allows us bootclasspath compiling older version release example need compile java level multijar releases one features added java multijar provides way still code latest features java maintaining support functionality java clients var keyword java var keyword introduced improved java var keyword developerfriendly keyword helps us reduce boilerplate coding type infection prevents repeating text affecting local variables version string schema another change java java defines version strings formatted new schema introduces versions schema looks something like
