polynomial time approximation scheme geeksforgeeks skip content tutorials algorithms analysis algorithms asymptotic analysis worst average best cases asymptotic notations little o little omega notations lower upper bound theory analysis loops solving recurrences amortized analysis what space complexity mean pseudopolynomial algorithms polynomial time approximation scheme time complexity question searching algorithms sorting algorithms graph algorithms pattern searching geometric algorithms mathematical randomized algorithms greedy algorithms dynamic programming divide conquer backtracking branch bound all algorithms data structures arrays linked list stack queue binary tree binary search tree heap hashing graph advanced data structure matrix strings all data structures languages c c java python c javascript jquery sql php scala perl go language html css kotlin interview corner company preparation top topics practice company questions interview experiences experienced interviews internship interviews competititve programming design patterns multiple choice quizzes gate gate cs notes last minute notes gate cs solved papers gate cs original papers official keys gate dates gate cs syllabus important topics gate cs sudo gate isro cs isro cs solved papers isro cs original papers official keys isro cs syllabus scientistengineer exam ugc net cs ugc net cs notes paper ii ugc net cs notes paper iii ugc net cs solved papers cs subjects mathematics operating system dbms computer networks computer organization architecture theory computation compiler design digital logic software engineering web technologies html css javascript angularjs reactjs nodejs bootstrap jquery php student campus ambassador program project geek month campus geek month placement course competititve programming testimonials geek top careers internship jobs apply jobs post job courses write come write articles us get featured practice learn code best industry experts premium get access adfree content doubt assistance jobs come find dream job us geeks digest quizzes campus mantri geeks campus gblog articles ide home courses gblog puzzles whats new related articles related articles recursion how write pseudo code difference bfs dfs search algorithm playfair cipher examples recursive practice problems solutions top array coding problems interviews complexity analysis binary search converting roman numerals decimal lying data structures algorithms online courses free paid quick sort vs merge sort comparison among bubble sort selection sort insertion sort midpoint circle drawing algorithm generate permutation set python commonly asked algorithm interview questions set dda line generation algorithm computer graphics design chess game columnar transposition cipher bresenhams line generation algorithm introduction algorithms k means clustering introduction lower upper bound theory array vectors c stl cyclomatic complexity line clipping set cohensutherland algorithm rail fence cipher encryption decryption two water jug puzzle uniformcost search dijkstra large graphs knearest neighbours priority cpu scheduling different arrival time set polynomial time approximation scheme difficulty level expert last updated sep well know fact known polynomial time solution np complete problems problems occur lot real world see example so must way handle we seen algorithms problems p approximate example approximate travelling salesman can better polynomial time approximation scheme ptas type approximate algorithms provide user control accuracy desirable feature algorithms take additional parameter provide solution approximate minimization maximization example consider minimization problem solution provided ptas algorithm approximate running time ptas must polynomial terms n however exponential terms ptas algorithms exponent polynomial increase dramatically reduces example runtime problem stricter scheme fully polynomial time approximation scheme fptas fptas algorithm need polynomial problem size n example knapsack problem we know knapsack np complete dp based pseudo polynomial solution input values high solution becomes infeasible need approximate solution one approximate solution use greedy approach compute value per kg items put highest value per kg first smaller w greedy approach ptas dont control accuracy below fptas solution knapsack problem input w capacity knapsack val n values items wt n weights items find maximum valued item ie find maximum value val let maximum value maxval compute adjustment factor k values
